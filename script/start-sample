#!/bin/bash

# -----------------------------------------------------------------------------
# USAGE:
# -----------------------------------------------------------------------------
# Runs the Sample App located at `<repo>/examples/sample` using a given
# runner (Pure Ruby Runner, by default).
#
# From the root of the repository, run the following to compile source-files
# for the App-view and then serve the App using the default ruby-runner:
#
#   $ script/run-sample -b
#
# Unless the source-files are changed, the App can be run using the previously
# compiled source and the ruby-runner:
#
#   $ script/run-sample
#
# Alternatively, a high-performance runner (OpO), available for Linux, OSX
# platforms can also be run using this script, provided OpO is already
# installed in the system. There are two varieties, opod which spawns a Ruby
# app or opo-rub which runs the Ruby code embedded in the runner.
#
# The following command compiles source-files and serves with the OpO runner:
#
#   $ script/run-sample -bo
#
# Likewise, the following serves the App with the OpO runner using previously
# compiled source-files:
#
#   $ script/run-sample -o
#
# To run opo-rub, the following serves the App with the OpO-Rub runner using
# previously compiled source-files:
#
#   $ script/run-sample -e
# -----------------------------------------------------------------------------

set -e

sampledir=examples/sample

while getopts :boe opt
do
  case $opt in
    b)
      echo -e "\n  Compiling source files.."
      bundle exec ruby script/build-view
      ;;
    o)
      echo -e "\n  Starting OpO Daemon.."
      opod -c $sampledir/opo/opo.conf
      ;;
    e)
      echo -e "\n  Starting OpO-Rub Daemon.."
      opo-rub -c $sampledir/opo/embed.conf
      ;;
  esac
done

# Start ruby-runner if no args had been passed or if the args did
# not contain the option to start OpO runner

if [ -z $# ] || [[ $1 != *'o'* && $1 != *'e'* ]]
then
  echo -e "\n  Starting Ruby Runner.."
  bundle exec wabur -s $sampledir
fi
