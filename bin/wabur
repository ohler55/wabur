#!/usr/bin/env ruby
# encoding: UTF-8

while (index = ARGV.index('-I'))
  _, path = ARGV.slice!(index, 2)
  $: << path
end

require 'optparse'
require 'logger'

require 'wab'
require 'wab/impl'

# Initial options
options = {
  'base'        => '.',
  'config_file' => nil
}
verbose_cnt = 0

opts = OptionParser.new(%{Usage: wabur [options]

A WAB Runner that is configured with a UNIX style config file.
})
opts.on('-b', '--base PATH', String, 'App root directory. Defaults to "."') { |d| options['base'] = d }
opts.on('-c', '--config PATH', String, 'Custom configuration file')         { |c| options['config_file'] = c }
opts.on('-v', '--verbose', 'Verbose output')                                { verbose_cnt += 1 }
opts.on('-h', '--help', 'Show this display')                                { puts opts.help; Process.exit!(0) }
opts.parse(ARGV)

config = WAB::Impl::Configuration.from(options)

class BasicController < WAB::Controller

  def initialize(shell)
    super(shell)
  end

  def handle(data)
    super
  end

  def create(path, query, data)
    super
  end

  def read(path, query)
    super
  end

  def update(path, query, data)
    super
  end

  def delete(path, query)
    super
  end

end # BasicController

if 0 < verbose_cnt
  v = config['verbose'].to_i - verbose_cnt
  v = 0 if v < 0
  config['verbose'] = v
end

shell = WAB::Impl::Shell.new(config)

# TBD configure logger better
shell.logger = Logger.new(STDOUT)
shell.logger.level = config['verbose'].to_i

controller = Object.const_get(config['controller']).new(shell)
shell.register_controller(nil, controller)

shell.start
